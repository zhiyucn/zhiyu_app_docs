import{_ as a,c as i,o as n,ae as e}from"./chunks/framework.BvL8IJPA.js";const c=JSON.parse('{"title":"实战：如何编写一个插件","description":"","frontmatter":{},"headers":[],"relativePath":"zybbs_client/plugins/init_a_plugins.md","filePath":"zybbs_client/plugins/init_a_plugins.md"}'),t={name:"zybbs_client/plugins/init_a_plugins.md"};function l(h,s,p,o,r,k){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="实战-如何编写一个插件" tabindex="-1">实战：如何编写一个插件 <a class="header-anchor" href="#实战-如何编写一个插件" aria-label="Permalink to &quot;实战：如何编写一个插件&quot;">​</a></h1><h2 id="准备工作" tabindex="-1">准备工作 <a class="header-anchor" href="#准备工作" aria-label="Permalink to &quot;准备工作&quot;">​</a></h2><ul><li>Python 3.10+</li><li>可以使用 IDE 或者文本编辑器编写代码</li><li>了解 Python 基本语法，如变量、函数、模块、类等</li></ul><h2 id="编写插件" tabindex="-1">编写插件 <a class="header-anchor" href="#编写插件" aria-label="Permalink to &quot;编写插件&quot;">​</a></h2><p>话不多说，开始实战吧！</p><h3 id="第一步-创建插件目录" tabindex="-1">第一步：创建插件目录 <a class="header-anchor" href="#第一步-创建插件目录" aria-label="Permalink to &quot;第一步：创建插件目录&quot;">​</a></h3><p>这里就不用管了，程序会自动创建插件目录。</p><h3 id="第二步-创建插件文件" tabindex="-1">第二步：创建插件文件 <a class="header-anchor" href="#第二步-创建插件文件" aria-label="Permalink to &quot;第二步：创建插件文件&quot;">​</a></h3><p>新建一个文件，就叫<code>study.py</code>吧，这个只要不是特殊的名字都可以。</p><h3 id="第三步-编写插件代码" tabindex="-1">第三步：编写插件代码 <a class="header-anchor" href="#第三步-编写插件代码" aria-label="Permalink to &quot;第三步：编写插件代码&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tkinter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> messagebox</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> login</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(token):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    messagebox.showinfo(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;提示&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;登录成功&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 插件登录的hook</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">():</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    messagebox.showinfo(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;提示&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;测试&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 插件运行的hook</span></span></code></pre></div><h3 id="第四步-开始测试" tabindex="-1">第四步：开始测试 <a class="header-anchor" href="#第四步-开始测试" aria-label="Permalink to &quot;第四步：开始测试&quot;">​</a></h3><p>在命令行中运行<code>python study.py</code>，如果一切顺利，你不会看到<code>登录成功</code>和<code>测试</code>这两个信息 放到程序的plugins目录下，重启程序，你会看到一个消息，登录后会显示<code>登录成功</code>，运行程序会显示<code>测试</code></p>`,13)]))}const E=a(t,[["render",l]]);export{c as __pageData,E as default};
